name: Build

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build devcontainer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rdietrick/did-files-change@v1.2
        id: check-files
        with:
          pathspec: .devcontainer
      - uses: docker/metadata-action@v3
        if: ${{ steps.check-files.outputs.changed }}
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/devcontainer
          github-token: ${{ github.token }}
      - uses: docker/login-action@v1
        if: |
          ${{ steps.check-files.outputs.changed }} &&
          github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        if: ${{ steps.check-files.outputs.changed }}
        id: build
        with:
          context: .devcontainer
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
  check:
    name: Run checks
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/vscode/devcontainers/base:alpine
    steps:
      # Check out the target repository
      - uses: actions/checkout@v2
      - run: .devcontainer/setup.sh
      - run: make all
      # Update Slack with the status of this job
      - uses: ravsamhq/notify-slack-action@v1
        if: always() && github.event_name != 'pull_request'
        env:
          # TODO: Figure out how to use the name of the job without copying it
          STATUS: 'Checks: <{run_url}|{status_message}>'
          COMMIT: for commit `<{commit_url}|{commit_sha}>`
          BRANCH: on branch `{branch}`
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          notification_title: ''
          message_format: ${{ env.STATUS }} ${{ env.COMMIT }} ${{ env.BRANCH }}
          footer: <{repo_url}|{repo}>
          notify_when: success,warning,failure
